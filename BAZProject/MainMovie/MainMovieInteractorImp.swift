//
//  MainMovieInteractor.swift
//  BAZProject
//
//  Created 1030364 on 18/10/22.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

final class MainMovieInteractorImp: MainMovieInteractor {

    weak var presenter: MovieListPresenter?
    var endPoint: PaginatedEndPoint
    
    init(endPoint: PaginatedEndPoint) {
        self.endPoint = endPoint
    }

    func getMoviesService(page: Int?, endPointResult: @escaping (MovieResponseResult?) -> Void) {
        DispatchQueue.global(qos: .background).async { [weak self] in
            var moviesList: [MovieModel] = []
            var result: MovieResponseResult
            let decoder = JSONDecoder()
            decoder.keyDecodingStrategy = .convertFromSnakeCase
            if let page = page {
                self?.endPoint.page = page
            }
            if let url = self?.endPoint.url,
               let data = try? Data(contentsOf: url),
               let movies = try? decoder.decode(GenericResponse.self, from: data) {
                for movie in movies.results {
                    let posterPath = movie.posterPath ?? ""
                    let backdropPath = movie.backdropPath ?? ""
                    var movieModel: MovieModel
                    if let url = URL(string: "https://image.tmdb.org/t/p/w500\(posterPath)"),
                       let urlBackdrop = URL(string: "https://image.tmdb.org/t/p/w500\(backdropPath)") {
                        if let imageData = try? Data(contentsOf: url),
                           let backdropData = try? Data(contentsOf: urlBackdrop) {
                            movieModel = MovieModel(moviePoster: UIImage(data: imageData),
                                                    movieBackdrop: UIImage(data: backdropData),
                                                    movie: movie)
                        } else {
                            movieModel = MovieModel(moviePoster: UIImage(named: "poster"), movieBackdrop: nil, movie: movie)
                        }
                    } else {
                        movieModel = MovieModel(moviePoster: UIImage(named: "poster"), movieBackdrop: nil, movie: movie)
                    }
                    moviesList.append(movieModel)
                }
                result = MovieResponseResult(totalPages: movies.totalPages,
                                             totalResults: movies.totalResults,
                                             movies: moviesList)
                endPointResult(result)
            } else {
                endPointResult(nil)
            }
        }
    }
}
